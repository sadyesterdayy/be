// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String?
  password  String?
  roles     UserRole[] 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Role {
  id          Int          @id @default(autoincrement())
  role        RoleList     @unique
  users       UserRole[]   
  permissions RolePermission[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model Permission {
  id         Int      @id @default(autoincrement())
  permission PermissionList 
  roles      RolePermission[]
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model UserRole {
  user   User @relation(fields: [userId], references: [id])
  userId Int
  role   Role @relation(fields: [roleId], references: [id])
  roleId Int
  assignedAt DateTime @default(now())

  @@id([userId, roleId])
}

model RolePermission {
  role       Role @relation(fields: [roleId], references: [id])
  roleId     Int
  permission Permission @relation(fields: [permissionId], references: [id])
  permissionId Int

  @@id([roleId, permissionId])
}

enum RoleList {
  level_1
  level_2
  level_3
  level_4
  level_5
  Admin
}

enum PermissionList {
  read
  write
  delete
  update
  manage_roles
  manage_permissions
}